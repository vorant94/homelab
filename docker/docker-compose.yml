services:
  nginx:
    image: nginx:1.27.1-alpine
    container_name: nginx
    hostname: nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - './nginx/templates:/etc/nginx/templates'
      - './nginx/certs:/etc/ssl/certs'
      - './nginx/private:/etc/ssl/private'
    depends_on:
      - pihole
      - heimdall
      - vaultwarden
      - jellyfin

  heimdall:
    image: linuxserver/heimdall:arm64v8-2.6.1
    container_name: heimdall
    hostname: heimdall
    restart: unless-stopped
    env_file: heimdall/.env
    volumes:
      - './heimdall/config:/config'

  pihole:
    image: pihole/pihole:2024.07.0
    container_name: pihole
    hostname: pihole
    restart: unless-stopped
    env_file: pihole/.env
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '67:67/udp'
    volumes:
      - './pihole/pihole:/etc/pihole'
      - './pihole/dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      - NET_ADMIN

  vaultwarden:
    image: vaultwarden/server:1.32.0-alpine
    container_name: vaultwarden
    hostname: vaultwarden
    restart: unless-stopped
    env_file: ./vaultwarden/.env
    volumes:
      - './vaultwarden/data:/data'
    depends_on:
      - postgres

  jellyfin:
    image: jellyfin/jellyfin:10.9.11
    container_name: jellyfin
    hostname: jellyfin
    restart: unless-stopped
    env_file: jellyfin/.env
    ports:
      - '8096:8096'
      - '8920:8920'
      - '7359:7359/udp'
      - '1900:1900/udp'
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/media:/data/media

  postgres:
    image: postgres:16.4-alpine
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    env_file: postgres/.env
    ports:
      - '5432:5432'
    volumes:
      - './postgres/data:/var/lib/postgresql/data'
